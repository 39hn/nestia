{
  "openapi": "3.0.1",
  "info": {
    "version": "0.1.0",
    "title": "Generated by nestia - https://github.com/samchon/nestia"
  },
  "paths": {
    "/health/check": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": ""
      }
    },
    "/health/alive": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": ""
      }
    },
    "/healthy/check": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": ""
      }
    },
    "/healthy/alive": {
      "get": {
        "tags": [],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "description": ""
      }
    },
    "/consumers/{section}/sales/{saleId}/articles/{articleId}/comments": {
      "post": {
        "tags": [],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "description": "Code of the target section",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          },
          {
            "name": "saleId",
            "in": "path",
            "description": "ID of the target sale",
            "schema": {
              "type": "number",
              "nullable": false
            },
            "required": true
          },
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of the target article",
            "schema": {
              "type": "number",
              "nullable": false
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Content to write",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISaleArticleComment.IStore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Newly archived comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISaleArticleComment"
                }
              }
            }
          },
          "400": {
            "description": "bad request error when type of the input data is not valid"
          },
          "401": {
            "description": "unauthorized error when you've not logged in yet"
          },
          "403": {
            "description": "forbidden error when you're a seller and the sale is not yours"
          },
          "404": {
            "description": "not found error when unable to find the matched record"
          }
        },
        "description": "Store a new comment."
      }
    },
    "/sellers/{section}/sales/{saleId}/articles/{articleId}/comments": {
      "post": {
        "tags": [],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "description": "Code of the target section",
            "schema": {
              "type": "string",
              "nullable": false
            },
            "required": true
          },
          {
            "name": "saleId",
            "in": "path",
            "description": "ID of the target sale",
            "schema": {
              "type": "number",
              "nullable": false
            },
            "required": true
          },
          {
            "name": "articleId",
            "in": "path",
            "description": "ID of the target article",
            "schema": {
              "type": "number",
              "nullable": false
            },
            "required": true
          }
        ],
        "requestBody": {
          "description": "Content to write",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ISaleArticleComment.IStore"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Newly archived comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ISaleArticleComment"
                }
              }
            }
          },
          "400": {
            "description": "bad request error when type of the input data is not valid"
          },
          "401": {
            "description": "unauthorized error when you've not logged in yet"
          },
          "403": {
            "description": "forbidden error when you're a seller and the sale is not yours"
          },
          "404": {
            "description": "not found error when unable to find the matched record"
          }
        },
        "description": "Store a new comment."
      }
    }
  },
  "components": {
    "schemas": {
      "ISaleArticleComment.IStore": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "nullable": false
          },
          "annonymous": {
            "type": "boolean",
            "nullable": false
          }
        },
        "nullable": false,
        "required": [
          "body",
          "annonymous"
        ],
        "description": "Store info."
      },
      "ISaleArticleComment": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "nullable": false
          },
          "parent_id": {
            "type": "number",
            "nullable": true
          },
          "writer_type": {
            "type": "string",
            "nullable": false
          },
          "writer_name": {
            "type": "string",
            "nullable": true
          },
          "contents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ISaleArticleComment.IContent"
            },
            "nullable": false
          },
          "created_at": {
            "type": "string",
            "nullable": false
          }
        },
        "nullable": false,
        "required": [
          "id",
          "parent_id",
          "writer_type",
          "writer_name",
          "contents",
          "created_at"
        ],
        "description": "Comment wrote on a sale related article.\n\nWhen an article of a sale has been enrolled, all of the participants like consumers and\nsellers can write a comment on that article. However, when the writer is a consumer, the\nconsumer can hide its name through the annoymous option. \n\nAlso, writing a reply comment for a specific comment is possible and in that case, the \n{@link ISaleArticleComment.parent_id} property would be activated."
      },
      "ISaleArticleComment.IContent": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": false
          },
          "body": {
            "type": "string",
            "nullable": false
          },
          "created_at": {
            "type": "string",
            "nullable": false
          }
        },
        "nullable": false,
        "required": [
          "id",
          "body",
          "created_at"
        ],
        "description": "Content info."
      }
    }
  }
}